<?php



require_once APPLICATION_PATH.'/models/servicemodel/We_Base_ServiceModel.php';
require_once APPLICATION_PATH.'/models/servicemodel/Lawyers.php';
require_once APPLICATION_PATH.'/models/servicemodel/Users.php';
require_once APPLICATION_PATH.'/helpers/Verification.php';
require_once APPLICATION_PATH.'/helpers/CommonHelper.php';
require_once APPLICATION_PATH.'/helpers/ShortMessageHelper.php';
require_once APPLICATION_PATH.'/helpers/AuthenticationMgr.php';
require_once APPLICATION_PATH.'/helpers/Social/WeiboHelper.php';
require_once APPLICATION_PATH.'/helpers/CommonHelper.php';


class Lawyercalleds extends We_Base_ServiceModel{

    //column
    public $id;
    
    //table
    public $lawyer_id;
    public $user_id;

    
    public function __construct()
    {
    	parent::__construct();
    	 
    	$this->propertyTypes["id"] = $this->columnProperty;
    
    	$this->propertyTypes["lawyer_id"] = $this->tableProperty;
    	$this->propertyTypes["user_id"] = $this->tableProperty;


    
    }
    
    public function setOtherPropertyForResponse($operation){
    	parent::setOtherPropertyForResponse($operation);
    	if($operation != 'delete'){

    	}
    	return $this;
    }
    
    
    public function onGet()
    {
    	parent::onGet();
    }
    
    public function onCreate()
    {
    	parent::onCreate();
    	$users = new Users();
    	$users->id = $this->user_id;
    	
    	$users = $users->get();
    	if($users == null){
    	    $this->logger->log("user id is not exist = ".$this->user_id,Zend_Log::ERR);
    	    throw new WeException(20247);
    	}
    	
    	$lawyers = new Lawyers();
    	$lawyers->id = $this->lawyer_id;
    	 
    	$lawyers = $lawyers->get();
    	if($lawyers == null){
    		$this->logger->log("lawyer id is not exist = ".$this->lawyer_id,Zend_Log::ERR);
    		throw new WeException(20248);
    	}

    }
    
    public function operationOfOtherProperty($operation)
    {
    	parent::operationOfOtherProperty($operation);
    	 
    }
    
    
    
    public function onUpdate()
    {
    	parent::onUpdate();
    
    
    
    }
    
    public function onDelete()
    {
    	parent::onDelete();
    }
    
}